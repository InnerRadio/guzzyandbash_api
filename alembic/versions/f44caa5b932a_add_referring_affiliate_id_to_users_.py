# Mako template for a new Alembic revision script

"""
Add referring_affiliate_id to users table

Revision ID: f44caa5b932a
Revises: 78b39a1b30a3
Create Date: 2025-06-11 00:30:31.215384

"""

# IMPORTS
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'f44caa5b932a'
down_revision = '78b39a1b30a3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # The following lines were autogenerated but cause errors because the database state
    # does not match Alembic's expectation. These are being removed/commented out.

    # This was previously removed due to "Duplicate column name 'last_updated_at'" on user_type_options
    # op.add_column('user_type_options', sa.Column('last_updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))

    # This was previously removed due to "index doesn't exist"
    # op.drop_index(op.f('ix_user_type_options_id'), table_name='user_type_options')

    # This was previously removed due to "Can't DROP 'updated_at'; check that column/key exists"
    # op.drop_column('user_type_options', 'updated_at')

    # This is being removed now due to "Duplicate column name 'last_updated_at'" on users
    # op.add_column('users', sa.Column('last_updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))

    op.alter_column('user_type_options', 'description',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               type_=sa.String(length=1000),
               existing_nullable=True)
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'hashed_password',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               type_=sa.String(length=255),
               existing_nullable=False)
    op.alter_column('users', 'bio',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               type_=sa.String(length=1000),
               existing_nullable=True)
    op.alter_column('users', 'profile_picture_url',
               existing_type=mysql.VARCHAR(length=2048),
               type_=sa.String(length=1000),
               existing_nullable=True)
    op.alter_column('users', 'social_links',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               type_=sa.String(length=1000),
               existing_nullable=True)
    op.alter_column('users', 'affiliate_id',
               existing_type=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               type_=sa.String(length=36),
               existing_nullable=True)
    op.alter_column('users', 'referring_affiliate_id',
               existing_type=mysql.INTEGER(),
               type_=sa.String(length=36),
               existing_nullable=True)
    op.create_foreign_key(op.f('fk_users_referring_affiliate_id_users'), 'users', 'users', ['referring_affiliate_id'], ['id'])
    op.drop_column('users', 'updated_at')
    op.drop_column('users', 'last_login_at')
    # ### END Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Reversing changes made in upgrade. Only include actions that reverse actual changes.
    op.add_column('users', sa.Column('last_login_at', mysql.DATETIME(), nullable=True))
    op.add_column('users', sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False))
    op.drop_constraint(op.f('fk_users_referring_affiliate_id_users'), 'users', type_='foreignkey')
    op.alter_column('users', 'referring_affiliate_id',
               existing_type=sa.String(length=36),
               type_=mysql.INTEGER(),
               existing_nullable=True)
    op.alter_column('users', 'affiliate_id',
               existing_type=sa.String(length=36),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               existing_nullable=True)
    op.alter_column('users', 'social_links',
               existing_type=sa.String(length=1000),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               existing_nullable=True)
    op.alter_column('users', 'profile_picture_url',
               existing_type=sa.String(length=1000),
               type_=mysql.VARCHAR(length=2048),
               existing_nullable=True)
    op.alter_column('users', 'bio',
               existing_type=sa.String(length=1000),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               existing_nullable=True)
    op.alter_column('users', 'hashed_password',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               existing_nullable=False)
    op.alter_column('users', 'email',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=100),
               existing_nullable=False)
    op.alter_column('users', 'username',
               existing_type=sa.String(length=255),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=50),
               existing_nullable=False)
    op.add_column('user_type_options', sa.Column('updated_at', mysql.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP'), nullable=False))
    op.create_index(op.f('ix_user_type_options_id'), 'user_type_options', ['id'], unique=False)
    op.alter_column('user_type_options', 'description',
               existing_type=sa.String(length=1000),
               type_=mysql.VARCHAR(collation='utf8mb4_unicode_ci', length=500),
               existing_nullable=True)
    # ### END Alembic commands ###